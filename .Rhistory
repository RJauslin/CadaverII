axis.ticks=element_blank(),
# legend
legend.position="bottom",
legend.title = element_text(size = 9,vjust = +1.0),
legend.key.size = unit(0.3, "cm"),
legend.key.width = unit(0.7,"cm") ,
# background colors
panel.background=element_blank(),
panel.border=element_rect(colour = "black",fill = "transparent"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1,size = 5),
# keep edge black facet_wrap
# strip.background = element_rect(fill="white"),
strip.text =element_text(color = "black",size = 8)
)
}
# workdir <- "C:/Users/jauslinr/switchdrive/LaboBiolSol"
# workdir <- "C:/Users/jauslinr/switchdrive/LaboBiolSol/eukaryote/18S"
workdir <- "C:/Users/Raph/switchdrive/LaboBiolSol"
mr <- read.table(file.path(workdir,"MRfinal.csv"),header=T,sep = ";")
ass<-read.table(file.path(workdir,"ASSfinal.csv"),sep="\t")
var <-  read_delim(file.path(workdir,"meta3.csv"),";", escape_double = FALSE, trim_ws = TRUE)
# Check right number
check <- function(mr,ass){
val1 <- colSums(mr)
val2 <- as.numeric(do.call(rbind,strsplit(as.character(ass$V1),split = "_"))[,3])
return(any(val1 != val2))
}
#---- REMOVE BASCTERIA
ind_MEP <- which(grepl("Metazoa|Embryophyceae|Archaea|Bacteria",ass$V4))
# ind_MEP <- grepl('Metazoa|Embryophyceae|Archaea|Bacteria', ass$V4)
mr2 <- mr[,-ind_MEP]
ass2 <- ass[-ind_MEP,]
rm(ind_MEP)
check(mr2,ass2)
#---- REMOVE FUNGI
ind_FUN <- which(grepl("Opisthokonta|Fungi",ass2$V4))
mr2 <- mr2[,-ind_FUN]
ass2 <- ass2[-ind_FUN,]
rm(ind_FUN)
#---- REMOVE RARE OTU
tmp <- as.numeric(colSums(mr))
tot <- sum(tmp)
sort(tmp/tot*100,decreasing = T)
index <- which(tmp/tot*100 > 0.01)
mr3 <- mr2[,index]
ass3 <- ass2[index,]
check(mr3,ass3)
mr <- read.table(file.path(workdir,"MRfinal.csv"),header=T,sep = ";")
ass<-read.table(file.path(workdir,"ASSfinal.csv"),sep="\t")
var <-  read_delim(file.path(workdir,"meta3.csv"),";", escape_double = FALSE, trim_ws = TRUE)
# Check right number
check <- function(mr,ass){
val1 <- colSums(mr)
val2 <- as.numeric(do.call(rbind,strsplit(as.character(ass$V1),split = "_"))[,3])
return(any(val1 != val2))
}
#---- REMOVE BASCTERIA
ind_MEP <- which(grepl("Metazoa|Embryophyceae|Archaea|Bacteria",ass$V4))
# ind_MEP <- grepl('Metazoa|Embryophyceae|Archaea|Bacteria', ass$V4)
mr2 <- mr[,-ind_MEP]
ass2 <- ass[-ind_MEP,]
rm(ind_MEP)
check(mr2,ass2)
#---- REMOVE FUNGI
ind_FUN <- which(grepl("Opisthokonta|Fungi",ass2$V4))
mr2 <- mr2[,-ind_FUN]
ass2 <- ass2[-ind_FUN,]
rm(ind_FUN)
#---- REMOVE RARE OTU
tmp <- as.numeric(colSums(mr2))
tot <- sum(tmp)
sort(tmp/tot*100,decreasing = T)
index <- which(tmp/tot*100 > 0.01)
mr3 <- mr2[,index]
ass3 <- ass2[index,]
check(mr3,ass3)
# sum(colSums(mr3method1))/sum(colSums(mr3))*100
#
#
#---- REMOVE THE SAMPLE THAT HAVE FAILED (124 occurence of OTUs)
failed <- which(rownames(mr3) == "E+C2+D15+P08")
# failed <- which(grepl("E+C2+D15+P08",as.character(rownames(mr3))))
# mr4 <- mr3
mr4 <- mr3[-failed,]
var <- var[-failed,]
var <- as.data.frame(var)
check(mr4,ass3) ## TRUE NORMAL CAR ON A ENLEVER UNE LIGNE DE mr3 donc le total n'est plus le m?me.
mr5 <- decostand(mr4,method = "hellinger",MARGIN = 2)
mr6 <- decostand(mr5,method = "tot",MARGIN = 1)
ass6 <- ass3
colour_fill <- c("Blood" = "red2",
"Control" = "grey50",
"Faeces"=  "tan4",
"Pig" = "hotpink2",
"Urine"="gold2")
var$shannon <- vegan::diversity(mr6, index = "shannon", MARGIN = 1)
var$richness <- rowSums(mr4)
test <- reshape2::melt(var,id = c("name_groups","Time","Treatment"),measure.vars = c("shannon","richness"))
test$name_groups <- gsub("_","-",test$name_groups)
# tikz(file = "shannon.tex", width =  5.39749, height = 6,standAlone = FALSE)
p_shan <- ggplot()+
geom_point(data = test,aes(x = name_groups,y = value,color = Treatment,shape = Treatment)) +
facet_wrap(~variable,scale = "free")+
labs(x = "Treatment per time",
y = "Observed values",
# title = "Meuse river",
fill = "",
caption = NULL)+
# scale_color_viridis_d()+
scale_color_manual("Treatments",values = colour_fill)+
scale_shape_manual("Treatments",values = c(15,16,17,18,19))+
theme_wave()
# print(p_shan)
# dev.off()
# theme(axis.text.x = element_text(angle = 90, hjust = 1),
#       plot.title = element_text(hjust = 0.5),
#       axis.ticks = element_blank(),
#       panel.background = element_blank(),
#       plot.background = element_blank())
@
mr_pr_ab <- ifelse(mr4==0,0,1) # CHANGE THE COMM MATRIX INTO OCCURENCE MATRIX  1 - 0
resp <-rowSums(mr_pr_ab)
names(resp) <- var$X1
var$resp <- resp
var$Time2 <- as.numeric(do.call(rbind,strsplit(var$Time,"D"))[,2])
# tikz(file = "loess.tex", width =  5.39749, height = 6,standAlone = FALSE)
p_loess <-ggplot(data = var,aes(x = Time2,y = resp,color = Treatment,shape = Treatment)) +
geom_point()+
geom_smooth(aes(group = Treatment,color = Treatment),se = F,alpha = 0.2)+
# geom_smooth(aes(group = Treatment),method = lm,se = F)+
scale_color_manual("Treatment",values = colour_fill)+
# ggtitle("OTU's number evolution over time")+
xlab("Time (days)")+ ylab("Number of OTUs")+
scale_shape_manual("Treatment",values = c(15,16,17,18,19))+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
axis.ticks = element_blank(),
panel.background = element_blank(),
plot.background = element_blank())
grid.arrange(p_shan, p_loess, ncol = 1)
var$place <-  paste(var$name_groups,do.call(rbind,strsplit(as.character(var$X1),split = "[_]"))[,3],sep = "_")
f <- do.call(rbind,strsplit(as.character(ass3$V4),split = "[|]"))[,2]
f <- gsub("_","-",f)
mrtest <- mr6
taxo <- c()
for(i in 1:nrow(mrtest)){
tmp <- aggregate(as.data.frame(as.numeric(mrtest[i,])),by = list(f),FUN = "sum")
tmp[,2] <- tmp[,2]/sum(tmp[,2])*100
if(any(tmp[,2] < 1)){
index <- which(tmp[,2] <1)
}
tmp[index,1] <- "Other"
tmp[,3] <- rep(var$place[i],nrow(tmp))
tmp <- aggregate(tmp[,2],by = list(factor(tmp[,1]),tmp[,3]),FUN = "sum")
colnames(tmp) <- c("group","treat_time","relab")
taxo <- rbind(taxo,tmp)
}
taxo$group <- factor(taxo$group,levels = c("Other",levels(taxo$group)[-which(levels(taxo$group) == "Other")]))
pal <- brewer.pal(nlevels(taxo$group), "Paired")
# viridisLite::magma(nlevels(taxo$group))
pal <- c("grey",pal)
taxo$treat_time <- gsub("_","-",taxo$treat_time)
# tikz(file = "taxoprofile.tex", width =  5.39749, height = 6,standAlone = FALSE)
p_taxo <- ggplot()+
geom_bar(data = taxo,aes(x = treat_time,y = relab,fill = group),color = "black",stat="identity",size = 0.01)+
# scale_fill_brewer(palette = "Set2")+
scale_fill_manual(values= pal)+
labs(x = "Treatment per time",
y = "Relative abundance",
# title = "Meuse river",
fill = "",
caption = NULL)+
theme_wave()+
theme(
panel.border=element_blank()
)
print(p_taxo)
# NMDS WITH THE MR6 ( double decostand on the 2 margin )
nmds<-metaMDS(mr6,k=2)
# PREPARE THE DATA.FRAME FOR THE PLOT
data.scores <- as.data.frame(scores(nmds)) # EXCTRACT THE NMDS OUTPUT
data.scores$site <- rownames(data.scores) # RIGHT NAME
var$P <- do.call(rbind,strsplit(var$X1,split = "_"))[,3] ## GET THE PLACET
data.scores$grp <- as.factor(var$Treatment) # THE TREATMENT GROUP
data.scores$namegrp <- as.factor(var$name_groups) # THE TREATMENT PER TIME
varEnv <- var[,3:11] # ENVIRONEMENTAL VARIABLE
fit_env <-envfit(nmds,varEnv) # ENVFIT
## PREPARE THE DATA TO GGPLOT
envi <- as.data.frame(fit_env$vectors$arrows)
envi$x0 <- rep(0,length(envi$NMDS1))
envi$y0 <- rep(0,length(envi$NMDS1))
envi$NMDS1 <- envi$NMDS1/2
envi$NMDS2 <- envi$NMDS2/2
envi$NMDS1_1 <- envi$NMDS1 + 0.01
envi$NMDS2_2 <- envi$NMDS2 + 0.01
envi$name <- rownames(envi)
## EXTTRACT THE CENTROID AND THE CONVEX HULL
df <- data.scores
df$Time <- var$Time
find_hull <- function(df) df[chull(df$NMDS1, df$NMDS2), ]
hulls <- ddply(df, "namegrp", find_hull)
# REORDERING THE DATA
data.scores <- data.scores[order(data.scores$namegrp),]
# FUNCTION THAT CALCULATES THE CENTROID
centroid <- function(data,varIndex){
n <- nlevels(as.factor(data[,varIndex]))
lvl <- levels(as.factor(data[,varIndex]))
final <- data.frame(NMDS1 = rep(0,n),
NMDS2 = rep(0,n),
grp = rep(0,n),
fac = rep(0,n))
for(i in 1:n){
tmp <-data[which(data[,varIndex] == lvl[i]),]
final$NMDS1[i] <- sum(tmp$NMDS1)/length(tmp$NMDS1)
final$NMDS2[i] <- sum(tmp$NMDS2)/length(tmp$NMDS2)
final$fac[i] <- lvl[i]
final$grp[i] <- as.character(unique(tmp$grp))
}
return(final)
}
# CALCUL THE CENTROID
center <- centroid(data.scores,5)
center$Time <- as.factor(do.call(rbind,strsplit(center$fac,"_"))[,2])
hulls$namegrp <- gsub("_","-",hulls$namegrp)
data.scores$namegrp <- gsub("_","-",data.scores$namegrp)
center$fac <- gsub("_","-",center$fac)
envi$name <- gsub("_","-",envi$name)
# tikz(file = "nmds.tex", width =  5.39749, height = 6,standAlone = FALSE)
p_nmds <- ggplot() +
geom_polygon(data=hulls,aes(x=NMDS1,y=NMDS2,fill=grp,group=namegrp),alpha=0.30)+
geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,color=grp,shape = grp)) +
geom_path(data =center,aes(x = NMDS1,y = NMDS2,color = grp))+
geom_text(data=center,aes(x=NMDS1,y=NMDS2,label = Time,colour = grp,group = as.factor(Time)),size=2.5,vjust=-0.2)+
geom_segment(data= envi, mapping=aes(x=x0, y=y0, xend=NMDS1, yend=NMDS2), arrow=arrow(length = unit(0.08, "inches")), size=0.4, color="black")+
geom_text(data=envi,aes(x=NMDS1_1,y=NMDS2_2,label = name),size=2.5,hjust = 0.2)+
scale_color_manual("Treatments",values = colour_fill)+
# scale_color_viridis_d("Treatments")+
scale_shape_manual("Treatments",values = c(15,16,17,18,19))+
# scale_fill_viridis_d("Treatments")+
scale_fill_manual("Treatments",values = colour_fill, aesthetics = "fill")+
theme_light() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom",
axis.ticks = element_blank(),
panel.background = element_blank(),
plot.background = element_blank())
print(p_nmds)
# CREATION DES LIST
lst<-split(mr6,var$Treatment)
vec<-split(var,var$Treatment)
# PUT CONTROL AT THE END OF EACH TREATMENT OF THE DATA.FRAME
tmp <- vec$Control
tmp2 <- lst$Control
for(i in 1:length(lst)){
lst[[i]] <- rbind(lst[[i]],tmp2)
vec[[i]] <- as.data.frame(rbind(vec[[i]],tmp))
}
lst <- lst[-which(names(lst) == "Control")]
vec <- vec[-which(names(vec) == "Control")]
# SCALING ALL TREATMENT (WITH CONTROL FOR EACH TREATMENTS)
for(i in 1:length(vec)){
vec[[i]][,4:11] <- scale(vec[[i]][,4:11])
}
# FIT WIHT RDA AND ORDISTEP
fit <- list()
for(i in 1:length(vec)){
fit[[i]] <- ordistep(rda(lst[[i]] ~ Moisture_percent+	TC_percent+	pH+	NH4_ug_g+	NO3_ug_g	+TN_percent+	TOC_percent	+CN,vec[[i]][,4:11]))
names(fit)[i] <- names(vec)[i]
}
# BIG LIST WITH ALL THE INFORMATIONS NEEDED FOR THE GGPLOT
summ <- list()
for(i in 1:length(vec)){
summ[[i]] <- list()
summ[[i]]$summary <- summary(fit[[i]])
# extract site of the summary
summ[[i]]$site <- cbind(summ[[i]]$summary$sites[,1:2],
Treatment2 = rep(names(vec)[i],length(summ[[i]]$summary$sites[,1])),
Treatment = vec[[i]]$Treatment,
Time = vec[[i]]$Time,
Namegroup = vec[[i]]$name_groups
)
colnames(summ[[i]]$site) <- c("RDA1","RDA2","Treatment2","Treatment","Time","name_group")
# extract species of the summary
summ[[i]]$species <- cbind(summ[[i]]$summary$species[,1:2],
Treatment = rep(names(vec)[i],length(summ[[i]]$summary$species[,1])))
colnames(summ[[i]]$species) <- c("RDA1","RDA2","Treatment")
# extract biplot of the summary
summ[[i]]$biplot <-  cbind(summ[[i]]$summary$biplot[,1:2],
Treatment = rep(names(vec)[i],length(summ[[i]]$summary$biplot[,1])))
colnames(summ[[i]]$biplot) <- c("RDA1","RDA2","Treatment2")
# extract pourc of the summary
summ[[i]]$pourc <- data.frame(matrix(rep(0,3),ncol = 3,nrow = 1))
colnames(summ[[i]]$pourc) <- c("RDA1","RDA2","Treatment2")
summ[[i]]$pourc$RDA1 <- round(summ[[i]]$summary$cont$importance[2,1]*100,3)
summ[[i]]$pourc$RDA2 <- round(summ[[i]]$summary$cont$importance[2,2]*100,3)
summ[[i]]$pourc$Treatment2 <- names(vec)[i]
names(summ)[i] <- names(vec)[i]
}
# rbind THE DATA.FRAME AND ADD SOME STUFF TO THE PLOT
datSite <- datSpecies <- datBiplot <- datPourc <-  data.frame()
for(i in 1:length(summ)){
datSite <- rbind(datSite,summ[[i]]$site)
datSpecies <- rbind(datSpecies,summ[[i]]$species)
datBiplot <- rbind(datBiplot,summ[[i]]$biplot)
datPourc <- rbind(datPourc,summ[[i]]$pourc)
}
datBiplot$RDA1 <- as.numeric(as.character(datBiplot$RDA1))/4
datBiplot$RDA2 <- as.numeric(as.character(datBiplot$RDA2))/4
datBiplot$x0 <- rep(0,length(datBiplot[,1]))
datBiplot$y0 <-  rep(0,length(datBiplot[,1]))
datBiplot$name <- rownames(datBiplot)
datSite$RDA1 <- as.numeric(as.character(datSite$RDA1))
datSite$RDA2 <- as.numeric(as.character(datSite$RDA2))
datPourc$RDA1 <- paste("F1 : ", datPourc$RDA1,"",sep = "")
datPourc$RDA2 <- paste("F2 : ", datPourc$RDA2,"",sep = "")
datPourc$x <- rep(-0.2,4)
datPourc$y <- rep(0.3,4)
## EXTTRACT THE CENTROID AND THE CONVEX HULL
# the names must be NULL for the ddply function ...
names(datSite$Treatment2) <- NULL
names(datSite$Treatment) <- NULL
names(datSite$Time) <- NULL
names(datSite$name_group) <- NULL
find_hull <- function(df) df[chull(df$RDA1, df$RDA2), ]
hulls <- ddply(datSite, c("name_group"), find_hull)
# FUNCTION THAT CALCULATES THE CENTROID
centroid <- function(data,varIndex){
n <- nlevels(as.factor(data[,varIndex]))
lvl <- levels(as.factor(data[,varIndex]))
final <- data.frame(RDA1 = rep(0,n),
RDA2 = rep(0,n),
Treatment = rep(0,n),
name_group = rep(0,n))
for(i in 1:n){
tmp <-data[which(data[,varIndex] == lvl[i]),]
final$RDA1[i] <- sum(tmp$RDA1)/length(tmp$RDA1)
final$RDA2[i] <- sum(tmp$RDA2)/length(tmp$RDA2)
final$name_group[i] <- lvl[i]
final$Treatment[i] <- as.character(unique(tmp$Treatment))
}
return(final)
}
# CALCUL THE CENTROID
center <- centroid(hulls,6)
center <- center[-which(center$Treatment == "Control"),] # not desired for the plot
colnames(center) <- c("RDA1","RDA2","Treatment2","name_group")
center$Time <- as.numeric(do.call(rbind,strsplit(center$name_group,split = "_D"))[,2]) # add time to CENTER
# colour_fill <- c("Blood" = "lightskyblue4",
#                  "Control" = "coral4",
#                  "Faeces"=  "royalblue4",
#                  "Pig" = "ivory4",
#                  "Urine"="olivedrab4")
datSite$name_group <- gsub("_","-",datSite$name_group)
center$name_group <- gsub("_","-",center$name_group)
datBiplot$name <- gsub("_","-",datBiplot$name)
# tikz(file = "rda.tex", width =  5.39749, height = 6,standAlone = FALSE)
p_rda <- ggplot() +
geom_polygon(data = datSite,aes(x = RDA1,y = RDA2,fill = Treatment,group = name_group),alpha = 0.3)+
geom_point(data=datSite,aes(x=RDA1,y=RDA2,color=Treatment,shape = Treatment))+
geom_path(data =center,aes(x = RDA1,y = RDA2,color = Treatment2))+
geom_text(data=center,aes(x=RDA1,y=RDA2,label = Time,colour = Treatment2,group = as.factor(Time)),size=3.0,vjust=-0.2)+
geom_segment(data= datBiplot,aes(x=x0, y=y0, xend=RDA1, yend=RDA2,color = Treatment2), arrow=arrow(length = unit(0.1, "inches")),colour = "black", size=0.3)+
geom_text(data=datBiplot,aes(x=RDA1+0.01,y=RDA2+0.01,label = name),size=2.5,hjust = 0.2)+
geom_text(data=datPourc,aes(x=x,y=y,label = RDA1),size=2.5,hjust = 0.2)+
geom_text(data=datPourc,aes(x=x,y=y-0.04,label = RDA2),size=2.5,hjust = 0.2)+
facet_wrap(~Treatment2)+
scale_color_manual("Treatments",values = colour_fill)+
scale_shape_manual("Treatments",values = c(15,16,17,18,19))+
scale_fill_manual("Treatments",values = colour_fill, aesthetics = "fill")+
xlab("RDA1") + ylab("RDA2")+
geom_vline(xintercept = 0,linetype="dashed",size = 0.1)+
geom_hline(yintercept = 0,linetype="dashed",size = 0.1)+
theme_light() +
# ggtitle("18S") +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom",
axis.ticks = element_blank(),
panel.background = element_blank(),
plot.background = element_blank())
print(p_rda)
# dev.off()
?filterByExpr
groups <- var$name_groups
groups[which(var$Time == "D0")]  <- "Control"
groups[which(var$Treatment == "Control")]  <- "Control"
index <- which(groups == "Control")
index <-  c(index,which(grepl("64",groups)))
groups <- groups[index]
groups <- factor(groups)
groups <- factor(groups,levels = c("Control",levels(groups)[-which(levels(groups) == "Control")]))
var_indic <- var[index,]
mr_indic <- mr4[index,]
## FILTER
design <- model.matrix(~groups)
dge_indic <- DGEList(counts=t(mr_indic),group = groups)
keep <- filterByExpr(dge_indic, min.count = 10, min.total.count = 15, large.n = 10, min.prop = 0.7)
keep <- filterByExpr(dge_indic, min.count = 2,min.total.count = 3)
length(which(keep))
keep <- filterByExpr(dge_indic, min.count = 10, min.total.count = 15, large.n = 10, min.prop = 0.7)
length(which(keep))
# keep <- filterByExpr(dge_indic, min.count = 10, min.total.count = 15, large.n = 10, min.prop = 0.7)
keep <- filterByExpr(dge_indic, min.count = 2,min.total.count = 4)
length(which(keep))
# keep <- filterByExpr(dge_indic, min.count = 10, min.total.count = 15, large.n = 10, min.prop = 0.7)
keep <- filterByExpr(dge_indic, min.count = 3,min.total.count = 4)
length(which(keep))
# keep <- filterByExpr(dge_indic, min.count = 10, min.total.count = 15, large.n = 10, min.prop = 0.7)
keep <- filterByExpr(dge_indic, min.count = 4,min.total.count = 4)
length(which(keep))
# length(which(keep))
dge_indic <- dge_indic[keep, , keep.lib.sizes=FALSE]
dge_indic <- calcNormFactors(dge_indic)
mr_indic <- t(dge_indic$counts)
disp_indic <- estimateGLMRobustDisp(dge_indic,design = design)
glmfit_indic <- glmFit(disp_indic, design = design)
lrt_indic <- glmLRT(glmfit_indic,coef = 2:nlevels(groups))
indc_edge <- topTags(lrt_indic,n = Inf, p.value = 0.05)
indc_edge <- indc_edge$table
bioinc <- multipatt(mr_indic,groups,func="r.g" ,control = how(nperm=9999))
bioinc_sign <- bioinc$sign
# venndiagram(rownames(bioinc_sign),rownames(indc_edge),type=2,
# printsub=F,lcol="black",tcol="black",diacol="black",lines="black",
# labels=c("Indicator Species Analysis","edgeR Analysis"),title="Cropping Sensitive \nSoil Bacteria OTUs")
index_edge_indval <- intersect(rownames(bioinc_sign),rownames(indc_edge))
bioinc_sign <- bioinc_sign[index_edge_indval,]
write.table(bioinc_sign,"bioinc_sign.txt",sep="\t",quote=F)
l <- list()
for(i in 1:nlevels(groups)){
l[[i]] <- as.matrix(bioinc_sign[which(bioinc_sign[,i] == 1 & bioinc_sign$p.value < 0.05),])
}
inc_values <- do.call(rbind,l)
colnames(inc_values)[1:nlevels(groups)] <- levels(groups)
NAME <- do.call(rbind,strsplit(as.character(ass3$V4),split = "[|]"))[,3]
name_otu <- c()
for(i in 1:nrow(bioinc_sign)){
name_otu <- c(name_otu,NAME[which(rownames(bioinc_sign)[i] == colnames(mr4))])
}
# cols <- viridisLite::magma(nlevels(factor(name_otu)))
cols <- brewer.pal(nlevels(taxo$group), "Paired")
lev <- levels(factor(name_otu))
colorvertex <- c()
for(i in 1:nlevels(factor(name_otu))){
colorvertex[which(name_otu == lev[i])] <- cols[i]
}
dat <- data.frame(name_otu = name_otu,rownames(bioinc_sign),col = colorvertex)
rownames(dat) <- as.character(rownames(bioinc_sign))
from <- to <- indval <- c()
for(i in 1:nlevels(groups)){
from <- c(from,rep(colnames(inc_values)[i],length(which(inc_values[,colnames(inc_values)[i]] == 1))))
to <- c(to,rownames(inc_values)[which(inc_values[,colnames(inc_values)[i]]==1)])
indval <- c(indval,inc_values[which(inc_values[,colnames(inc_values)[i]] == 1),"stat"])
}
bipart <- data.frame(from = from,to = to, indval = indval)
bi <- graph.data.frame(bipart,directed=F)
bi <- simplify(bi, remove.multiple=T, remove.loops=T)
## Set node labels
V(bi)$label <- V(bi)$name
V(bi)$label[grepl("X",V(bi)$label)] = NA
V(bi)$color <- as.character(dat[V(bi)$name, ]$col)
V(bi)$color[1:nlevels(groups)] <- rep("white",nlevels(groups))
V(bi)$size <- c(rep(2,nlevels(groups)), rep(5,length(V(bi)$name) - nlevels(groups) ))
V(bi)$shape <- c(rep("circle",nlevels(groups)),rep("circle",length(V(bi)$name) - nlevels(groups) ))
V(bi)$frame.color <- V(bi)$color
bi_fr <- layout_with_fr(bi, niter=9999)
# tikz(file = "network.tex", width =  5.39749, height = 6,standAlone = FALSE)
layout(matrix(c(1,2), nrow=2, byrow=T), c(1,1), c(7,3))
# layout.show(n = 2)
par(mar=c(0,0,0,0), oma=c(0,0,0,0))
plot(bi, vertex.label.cex=2, layout=bi_fr, asp=0)
plot(1, type="n", ann=F, axes=F)
legend("center", pch=19, bty="n", horiz=F, x.intersp=0.4,cex = 0.75,
legend=lev,
col=cols,ncol = 2)
## CALCULATE RELATIVE ABUNDANCE OF
mr_edge_indval <- mr_indic[,index_edge_indval]
# mr_edge_indval <- mr_edge_indval[index,]
mr_edge_indval <- decostand(mr_edge_indval,method = "hellinger",MARGIN = 2)
mr_edge_indval <- decostand(mr_edge_indval,method = "tot",MARGIN = 1)
mr_edge_indval <- aggregate(mr_edge_indval,by = list(groups),FUN = "sum")
rownames(mr_edge_indval) <- mr_edge_indval[,1]
mr_edge_indval <- mr_edge_indval[,-1]
mr_edge_indval <- t(mr_edge_indval/rowSums(mr_edge_indval) * 100)
phylum <- mr_edge_indval
phylum <- aggregate(phylum,by = list(dat$name_otu),FUN = "sum")
rownames(phylum) <- phylum[,1]
phylum <- phylum[,-1]
rownames(mr_edge_indval)   <- paste(rownames(mr_edge_indval),dat$name_otu)
colors <- colorRampPalette(c("grey90", "darkblue", "darkred"))
# mr_edge_indval<-  t(mr_edge_indval)
heatmap.2(as.matrix(log2(mr_edge_indval+1)),
col=colors,
margins=c(5,12),
trace="none",
cexCol=1,
srtCol=45,
key.xlab=expression(paste("Relative OTU abundance"," (log"[2]," CPM)")))
heatmap.2(as.matrix(log2(phylum+1)), col=colors, margins=c(5,12),scale="none", trace="none"
,density.info="none",key.title=NA,
srtCol=45,
cexCol = 1,
labRow=rownames(phylum),
dendrogram="none",key.xlab=expression(paste("Relative OTU abundance"," (log"[2]," CPM)")))
# mr_edge_indval<-  t(mr_edge_indval)
heatmap.2(as.matrix(log2(mr_edge_indval+1)),
col=colors,
margins=c(5,12),
trace="none",
cexCol=1,
srtCol=45,
key.xlab=expression(paste("Relative OTU abundance"," (log"[2]," CPM)")))
